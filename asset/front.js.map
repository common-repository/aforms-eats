{"mappings":"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","sources":["node_modules/hyperapp/src/index.js","node_modules/src/php/strings/number_format.js","node_modules/yubinbango-core/yubinbango-core.ts","src/asset/front.js","src/asset/front_component.js"],"sourcesContent":["export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      if (typeof value === \"string\") {\n        element.style.cssText = value\n      } else {\n        if (typeof oldValue === \"string\") oldValue = element.style.cssText = \"\"\n        for (var i in clone(oldValue, value)) {\n          var style = value == null || value[i] == null ? \"\" : value[i]\n          if (i[0] === \"-\") {\n            element.style.setProperty(i, style)\n          } else {\n            element.style[i] = style\n          }\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (\n        name in element &&\n        name !== \"list\" &&\n        name !== \"type\" &&\n        name !== \"draggable\" &&\n        name !== \"spellcheck\" &&\n        name !== \"translate\" &&\n        !isSvg\n      ) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","module.exports = function number_format (number, decimals, decPoint, thousandsSep) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/number_format/\n  // original by: Jonas Raoni Soares Silva (https://www.jsfromhell.com)\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: davook\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  // bugfixed by: Michael White (https://getsprink.com)\n  // bugfixed by: Benjamin Lupton\n  // bugfixed by: Allan Jensen (https://www.winternet.no)\n  // bugfixed by: Howard Yeend\n  // bugfixed by: Diogo Resende\n  // bugfixed by: Rival\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  //  revised by: Jonas Raoni Soares Silva (https://www.jsfromhell.com)\n  //  revised by: Luke Smith (https://lucassmith.name)\n  //    input by: Kheang Hok Chin (https://www.distantia.ca/)\n  //    input by: Jay Klehr\n  //    input by: Amir Habibi (https://www.residence-mixte.com/)\n  //    input by: Amirouche\n  //   example 1: number_format(1234.56)\n  //   returns 1: '1,235'\n  //   example 2: number_format(1234.56, 2, ',', ' ')\n  //   returns 2: '1 234,56'\n  //   example 3: number_format(1234.5678, 2, '.', '')\n  //   returns 3: '1234.57'\n  //   example 4: number_format(67, 2, ',', '.')\n  //   returns 4: '67,00'\n  //   example 5: number_format(1000)\n  //   returns 5: '1,000'\n  //   example 6: number_format(67.311, 2)\n  //   returns 6: '67.31'\n  //   example 7: number_format(1000.55, 1)\n  //   returns 7: '1,000.6'\n  //   example 8: number_format(67000, 5, ',', '.')\n  //   returns 8: '67.000,00000'\n  //   example 9: number_format(0.9, 0)\n  //   returns 9: '1'\n  //  example 10: number_format('1.20', 2)\n  //  returns 10: '1.20'\n  //  example 11: number_format('1.20', 4)\n  //  returns 11: '1.2000'\n  //  example 12: number_format('1.2000', 3)\n  //  returns 12: '1.200'\n  //  example 13: number_format('1 000,50', 2, '.', ' ')\n  //  returns 13: '100 050.00'\n  //  example 14: number_format(1e-8, 8, '.', '')\n  //  returns 14: '0.00000001'\n\n  number = (number + '').replace(/[^0-9+\\-Ee.]/g, '')\n  const n = !isFinite(+number) ? 0 : +number\n  const prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)\n  const sep = (typeof thousandsSep === 'undefined') ? ',' : thousandsSep\n  const dec = (typeof decPoint === 'undefined') ? '.' : decPoint\n  let s = ''\n\n  const toFixedFix = function (n, prec) {\n    if (('' + n).indexOf('e') === -1) {\n      return +(Math.round(n + 'e+' + prec) + 'e-' + prec)\n    } else {\n      const arr = ('' + n).split('e')\n      let sig = ''\n      if (+arr[1] + prec > 0) {\n        sig = '+'\n      }\n      return (+(Math.round(+arr[0] + 'e' + sig + (+arr[1] + prec)) + 'e-' + prec)).toFixed(prec)\n    }\n  }\n\n  // @todo: for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec).toString() : '' + Math.round(n)).split('.')\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep)\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || ''\n    s[1] += new Array(prec - s[1].length + 1).join('0')\n  }\n\n  return s.join(dec)\n}\n","let CACHE = [];\nmodule YubinBango {\n  export class Core {\n    URL = 'https://yubinbango.github.io/yubinbango-data/data';\n    REGION: string[] = [\n      null, '北海道', '青森県', '岩手県', '宮城県',\n      '秋田県', '山形県', '福島県', '茨城県', '栃木県',\n      '群馬県', '埼玉県', '千葉県', '東京都', '神奈川県',\n      '新潟県', '富山県', '石川県', '福井県', '山梨県',\n      '長野県', '岐阜県', '静岡県', '愛知県', '三重県',\n      '滋賀県', '京都府', '大阪府', '兵庫県', '奈良県',\n      '和歌山県', '鳥取県', '島根県', '岡山県', '広島県',\n      '山口県', '徳島県', '香川県', '愛媛県', '高知県',\n      '福岡県', '佐賀県', '長崎県', '熊本県', '大分県',\n      '宮崎県', '鹿児島県', '沖縄県'\n    ];\n    constructor(inputVal: string = '', callback?) {\n      if(inputVal){\n        // 全角の数字を半角に変換 ハイフンが入っていても数字のみの抽出\n        const a:string = inputVal.replace(/[０-９]/g, (s: string) => String.fromCharCode(s.charCodeAt(0) - 65248));\n        const b:RegExpMatchArray = a.match(/\\d/g);\n        const c:string = b.join('');\n        const yubin7: string = this.chk7(c);\n        // 7桁の数字の時のみ作動\n        if (yubin7) {\n          this.getAddr(yubin7, callback);\n        } else {\n          callback(this.addrDic());\n        }\n      }\n    }\n    chk7(val: string) {\n      if (val.length === 7) {\n        return val;\n      }\n    }\n    addrDic(region_id = '', region = '', locality = '', street = '', extended = ''):{[key:string]: string} {\n      return {\n        'region_id': region_id,\n        'region': region,\n        'locality': locality,\n        'street': street,\n        'extended': extended\n      };\n    }\n    selectAddr(addr: string[]):{[key:string]: string} {\n      if (addr && addr[0] && addr[1]) {\n        return this.addrDic(addr[0],this.REGION[addr[0]],addr[1],addr[2],addr[3])\n      } else {\n        return this.addrDic()\n      }\n    }\n    jsonp(url: string, fn) {\n      window['$yubin'] = (data) => fn(data);\n      const scriptTag = document.createElement(\"script\");\n      scriptTag.setAttribute(\"type\", \"text/javascript\");\n      scriptTag.setAttribute(\"charset\", \"UTF-8\");\n      scriptTag.setAttribute(\"src\", url);\n      document.head.appendChild(scriptTag);\n    }\n    getAddr(yubin7: string, fn):{[key:string]: string} {\n      const yubin3 = yubin7.substr(0, 3);\n      // 郵便番号上位3桁でキャッシュデータを確認\n      if (yubin3 in CACHE && yubin7 in CACHE[yubin3]) {\n        return fn(this.selectAddr(CACHE[yubin3][yubin7]));\n      } else {\n        this.jsonp(`${this.URL}/${yubin3}.js`, (data) => {\n          CACHE[yubin3] = data;\n          return fn(this.selectAddr(data[yubin7]));\n        });\n      }\n    }\n  }\n}\n\nexport = YubinBango;\n","\r\nimport { h, app } from 'hyperapp';\r\nimport { Core as YubinBangoCore } from 'yubinbango-core';\r\nimport number_format from 'locutus/php/strings/number_format';\r\nimport { tnOnCreate, tnOnRemove, Image, TextInput, TextArea, RadioButton, Checkbox, Select, Echo, Button, InputGroup, Control } from './front_component';\r\n\r\n\r\n/*\r\n * Polyfills\r\n */\r\nMath.trunc = Math.trunc || function(x) {\r\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\r\n}\r\n\r\n/*\r\n * ===============================================================\r\n * utilities\r\n */\r\n\r\nfunction sprintf(format) {\r\n  var args = arguments;\r\n  var offset = 1;\r\n  return format.replace(/%([0-9]\\$)?([^0-9])/g, function (match, f1, f2) {\r\n    if (f2 == '%') {\r\n      return '%';\r\n    } else if (f2 == 's') {\r\n      if (! f1) {\r\n        return args[offset++];\r\n      } else {\r\n        return args[f1.slice(0, 1)];\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nconst nf = (amount) => {\r\n  return number_format(amount, rule.taxPrecision, catalog.decPoint, catalog.thousandsSep);\r\n}\r\n\r\nconst br = {nodeName:'br', attributes:{}, children:[]}\r\n\r\nconst _Tv = (x) => {\r\n  x = _T(x)\r\n  if (typeof x != 'string') return x\r\n\r\n  const lines = x.split('\\n')\r\n  if (lines.length == 1) return lines[0]\r\n  \r\n  return lines.reduce((cur, line) => {\r\n    return (cur.length == 0) ? [line] : [...cur, br, line]\r\n  }, [])\r\n}\r\n\r\nconst _T = (x) => {\r\n  if (typeof x == 'undefined' || x === null) return null\r\n  if (catalog.hasOwnProperty(x)) {\r\n    return catalog[x]\r\n  } else {\r\n    console.log('TO TRANSLATE: ', x);\r\n    return x;\r\n  }\r\n}\r\n\r\nconst scrollTo = (id, just = false) => {\r\n  const pos = document.documentElement.scrollTop || document.body.scrollTop;\r\n  const r = document.getElementById(id).getBoundingClientRect()\r\n  const posBot = r.top + pos - (just ? 0 : 100)\r\n  const posTop = r.top + pos - (just ? 1 : 150)\r\n  if (posTop > pos) {\r\n    const diff = Math.max((posTop - pos) / 8, 4)\r\n    if (behavior.smoothScroll && posTop - pos > 4) {\r\n      window.requestAnimationFrame(() => scrollTo(id, just))\r\n      window.scrollTo(0, pos + diff)\r\n    } else {\r\n      window.scrollTo(0, posTop)\r\n    }\r\n  } else if (posBot < pos) {\r\n    const diff = Math.max((pos - posBot) / 8, 4)\r\n    if (behavior.smoothScroll && pos - posBot > 4) {\r\n      window.requestAnimationFrame(() => scrollTo(id, just))\r\n      window.scrollTo(0, pos - diff)\r\n    } else {\r\n      window.scrollTo(0, posBot)\r\n    }\r\n  }\r\n}\r\n\r\nconst focusErrorInput = (prefix, ms) => {\r\n  const ids = Object.keys(ms)\r\n  if (ids.length == 0) return;\r\n  const name = '.'+prefix+ids[0]\r\n  const elem = document.querySelector(name);\r\n  if (elem != null) {\r\n    elem.focus();\r\n    return;\r\n  }\r\n}\r\n\r\nconst findByProp = (name, val, arr) => {\r\n  const len = arr.length\r\n  for (let i = 0; i < len; i++) {\r\n    if (arr[i][name] == val) return arr[i]\r\n  }\r\n  return undefined\r\n}\r\n\r\nconst subsetOf = (set, target) => {\r\n  for (let prop in target) {\r\n    if (! set.hasOwnProperty(prop)) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n//const exclude = (set, prop) => {\r\n//  const copy = {...set}\r\n//  delete copy[prop]\r\n//  return copy\r\n//}\r\n\r\nconst branchNo = (name, sep) => {\r\n  const off = name.lastIndexOf(sep)\r\n  const fragment = name.slice(off + 1)\r\n  return parseInt(fragment)\r\n}\r\n\r\nconst replaceElement = (arr, idx, value) => {\r\n  const arr2 = [...arr]\r\n  arr2[idx] = value\r\n  return arr2\r\n}\r\n\r\nconst indexOf = (e, lis) => {\r\n  const len = lis.length\r\n  for (let i = 0; i < len; i++) {\r\n    if (lis[i] == e) return i\r\n  }\r\n  return -1\r\n}\r\n\r\nconst reduceHash = (f, cur, hash) => {\r\n  for (let key in hash) {\r\n    cur = f(cur, key, hash[key])\r\n  }\r\n  return cur\r\n}\r\n\r\nconst lreplace = (arr, idx, e) => {\r\n  return arr.map((e0, i) => (i == idx) ? e : e0)\r\n}\r\n\r\n/*const mapHash = (f, hash) => {\r\n  const rv = {}\r\n  for (let key in hash) {\r\n    rv[key] = f(key, hash[key])\r\n  }\r\n  return rv\r\n}*/\r\n\r\nconst emptyString = (s) => (s == \"\")\r\n\r\nconst normalizePrice = (rule, price) => {\r\n  price = price * Math.pow(10, rule.taxPrecision)\r\n  switch (rule.taxNormalizer) {\r\n    case 'trunc': price = Math.trunc(price); break;\r\n    case 'floor': price = Math.floor(price); break;\r\n    case 'ceil':  price = Math.ceil(price); break;\r\n    case 'round': price = Math.round(price); break;\r\n  }\r\n  return price / Math.pow(10, rule.taxPrecision)\r\n}\r\n\r\nconst compare = (value, equation, threshold) => {\r\n  switch (equation) {\r\n    case 'equal': return value == threshold\r\n    case 'notEqual': return value != threshold\r\n    case 'greaterThan': return value > threshold\r\n    case 'greaterEqual': return value >= threshold\r\n    case 'lessThan': return value < threshold\r\n    case 'lessEqual': return value <= threshold\r\n  }\r\n}\r\n\r\nconst compare2 = (value, lower, lowerIncluded, higher, higherIncluded) => {\r\n  if (lower != null) {\r\n    if (lowerIncluded) {\r\n      if (value < lower) return false;\r\n    } else {\r\n      if (value <= lower) return false;\r\n    }\r\n  }\r\n  if (higher != null) {\r\n    if (higherIncluded) {\r\n      if (value > higher) return false;\r\n    } else {\r\n      if (value >= higher) return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nconst submit = (data, k, submitType = 'submit') => {\r\n  //console.log('submit', submitType);\r\n  jQuery.ajax({\r\n    type: \"post\", \r\n    url: (submitType == 'submit') ? submitUrl : confirmUrl, \r\n    data: JSON.stringify(data), \r\n    contentType: 'application/json',\r\n    success: function(response) {\r\n      k([response, submitType])\r\n    }, \r\n    error: function (xhr) {\r\n      const msg = (xhr.status === 403) ? _T('Failed to submit due to authorization failure.') : _T('Failed to submit due to some error.')\r\n      window.alert(msg)\r\n    }, \r\n    dataType: 'json'\r\n  });\r\n}\r\n\r\nconst complementAddress = (zip, k) => {\r\n  new YubinBangoCore(zip.replace('-', ''), k)\r\n}\r\n\r\n/*\r\n * ===============================================================\r\n * view \r\n */\r\n\r\nconst Product = (\r\n    {\r\n      quantity, \r\n      groupid, \r\n      product, \r\n      onincr, \r\n      ondecr, \r\n      navigator\r\n    }) => {\r\n  if (product.state == 'hidden') return null\r\n  const id = `wqe-product-detail-${groupid}-${product.id}`\r\n  const iname = `detail-${groupid}-${product.id}`\r\n  const price = pricePrefix + nf(product.price) + priceSuffix\r\n  return (\r\n    <div class={`wqe-Product wqe-belongs-${navigator} wqe-belongs-group-${groupid} ${quantity > 0 ? 'wqe-is-selected' : ''} ${product.state == 'disabled' ? 'wqe-is-disabled': ''}`} key={id} id={id+'-wrapper'}>\r\n      <div class=\"wqe--info\">\r\n        <div class=\"wqe--media\">\r\n          <Image src={product.image || wqData.noimageurl} scaling=\"user-defined\" xclass={`wqe-belongs-${navigator} wqe-belongs-product`} />\r\n        </div>\r\n        <div class=\"wqe--main\">\r\n          <div class=\"wqe--name\">{product.name}</div>\r\n          <div class=\"wqe--note\">{product.note}</div>\r\n          <div class=\"wqe--prices\">\r\n            <span class=\"wqe--price\">{price}</span>\r\n          </div>\r\n        </div>\r\n        {['SALE', 'RECOMMENDED'].map((r,i) => product.ribbons[r] ? (\r\n          <div class={`wqe--ribbon wqe-ribbon-${i+1}`}><span>{_Tv(r)}</span></div>\r\n        ) : null)}\r\n        {product.state == 'disabled' ? (\r\n          <div class={`wqe--ribbon wqe-ribbon-disabled`}><span>{_Tv('Sold Out')}</span></div>\r\n        ) : null}\r\n      </div>\r\n      <div class=\"wqe--control\">\r\n        <Button type=\"normal\" onclick={ondecr} name={iname} xclass=\"wqe-for-decr wqe-belongs-product\" disabled={product.state == 'disabled'}>{_Tv('-')}</Button>\r\n        <div class=\"wqe--quantity\">{quantity}</div>\r\n        <Button type=\"normal\" onclick={onincr} name={iname} xclass=\"wqe-for-incr wqe-belongs-product\" disabled={product.state == 'disabled'}>{_Tv('+')}</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Group = (\r\n    {\r\n      group, \r\n      selectedProducts, \r\n      onproductdecr, \r\n      onproductincr, \r\n      navigator\r\n    }\r\n) => {\r\n  if (! group.visible || group.products.every(p => p.state == \"hidden\")) return null\r\n  const id = `wqe-group-detail-${group.id}`\r\n  return (\r\n    <div class={`wqe-Group wqe-lct-enabled wqe-belongs-${navigator}`} key={id} id={id} oncreate={tnOnCreate} onremove={tnOnRemove}>\r\n      <div class=\"wqe--head\">\r\n        <div class=\"wqe--media\">\r\n          <Image src={group.image} scaling=\"center\" xclass={`wqe-belongs-${navigator} wqe-belongs-selector`} />\r\n        </div>\r\n        <div class=\"wqe--main\">\r\n          <div class=\"wqe--name\">{group.name}</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"wqe--body\">\r\n        <div class=\"wqe--note\">{group.note}</div>\r\n        {group.products.map((product, i) => {\r\n          const quantity = selectedProducts.hasOwnProperty(product.id) ? selectedProducts[product.id] : 0\r\n          return (\r\n            <Product quantity={quantity} groupid={group.id} product={product} onincr={onproductincr} ondecr={onproductdecr} navigator={navigator} />\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst HNavigator = (\r\n    {\r\n      data, \r\n      current, \r\n      onproductdecr, \r\n      onproductincr, \r\n    }, children) => {\r\n  const id = 'wqe-hnavigator'\r\n  return (\r\n    <div class=\"wqe-HNavigator\" id={id} key={id}>\r\n      {children}\r\n      <div class=\"wqe--items\">\r\n        {form.detailItems.map((item) => {\r\n          if (item.type == 'Group' && item.id == current) {\r\n            const selectedProducts = data.hasOwnProperty(item.id) ? data[item.id] : {}\r\n            return (<Group group={item} selectedProducts={selectedProducts} onproductdecr={onproductdecr} onproductincr={onproductincr} navigator=\"hnavigator\" />)\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst suspendOtherSurfaces = () => {\r\n  document.documentElement.classList.add('wqe-x-suspended')\r\n}\r\nconst resumeOtherSurfaces = () => {\r\n  document.documentElement.classList.remove('wqe-x-suspended')\r\n}\r\nconst overlayOnCreate = (el) => {\r\n  suspendOtherSurfaces()\r\n  tnOnCreate(el)\r\n}\r\nconst overlayOnRemove = (el, done) => {\r\n  const myDone = () => {\r\n    resumeOtherSurfaces()\r\n    done()\r\n  }\r\n  tnOnRemove(el, myDone)\r\n}\r\n\r\n\r\nconst Monitor = (\r\n    {\r\n      detailsState, \r\n      confirming, \r\n      monitorPos, \r\n      spShown, \r\n      ondecr, \r\n      onincr, \r\n      onHide\r\n    }) => {\r\n  const id = `wqe-monitor`\r\n  return (\r\n    <div class={`wqe-Monitor ${confirming ? 'wqe-is-confirming' : ''} ${spShown ? 'wqe-is-spshown' : ''} wqe-sticks-${monitorPos.v}`} id={id} key={id} style={{left:monitorPos.left+\"px\"}}>\r\n      <div class=\"wqe--header\">\r\n        <div class=\"wqe--title\">{_Tv('Shopping Cart')}</div>\r\n        <div class=\"wqe--menu\">\r\n          <Button type=\"normal\" onclick={onHide} xclass=\"wqe-belongs-monmenu wqe-for-hidemonitor\"><span class=\"dashicons dashicons-no-alt\"></span></Button>\r\n        </div>\r\n      </div>\r\n      <div class=\"wqe--entries\">\r\n        <div class=\"wqe--entry wqe-for-header\">\r\n          <div class=\"wqe--prop wqe-for-no\">{_Tv('No')}</div>\r\n          <div class=\"wqe--prop wqe-for-entry\">{_Tv('Entry')}</div>\r\n          <div class=\"wqe--prop wqe-for-unitPrice\">{_Tv('Unit Price')}</div>\r\n          <div class=\"wqe--prop wqe-for-quantity\">{_Tv('Quantity')}</div>\r\n          <div class=\"wqe--prop wqe-for-price\">{_Tv('Price')}</div>\r\n          {!rule.taxIncluded && (<div class=\"wqe--prop wqe-for-taxClass\">{_Tv('Tax Class')}</div>)}\r\n          <div class=\"wqe--prop wqe-for-operation\">{_Tv('Operation')}</div>\r\n        </div>\r\n        {detailsState.details.map((detail, i) => {\r\n          const id = `wqe-monitor-entry-${detail.key}`\r\n          return (\r\n            <div class=\"wqe--entry wqe-for-entry wqe-lct-enabled\" key={id} id={id} oncreate={tnOnCreate} onremove={tnOnRemove}>\r\n              <div class=\"wqe--prop wqe-for-no\">{i + 1}</div>\r\n              <div class=\"wqe--prop wqe-for-entry\">{detail.name}</div>\r\n              <div class=\"wqe--prop wqe-for-unitPrice\">{nf(detail.unitPrice)}</div>\r\n              <div class=\"wqe--prop wqe-for-quantity\">{detail.quantity}</div>\r\n              <div class=\"wqe--prop wqe-for-price\">{nf(normalizePrice(rule, detail.unitPrice * detail.quantity))}</div>\r\n              {!rule.taxIncluded && (<div class=\"wqe--prop wqe-for-taxClass\">{detail.taxRate === null ? sprintf(_Tv('(common %s%% applied)'), \"\"+rule.taxRate) : sprintf(_Tv('(%s%% applied)'), detail.taxRate)}</div>)}\r\n              {detail.operatable ? (\r\n                <div class=\"wqe--prop wqe-for-operation\">\r\n                  <Button type=\"normal\" name={`decr-${detail.key}`} onclick={ondecr} xclass=\"wqe-belongs-monitor wqe-for-decr\">{_Tv('-')}</Button>\r\n                  <Button type=\"normal\" name={`incr-${detail.key}`} onclick={onincr} xclass=\"wqe-belongs-monitor wqe-for-incr\">{_Tv('+')}</Button>\r\n                </div>\r\n              ) : (\r\n                <div class=\"wqe--prop wqe-for-operation wqe-is-empty\"></div>\r\n              )}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n      {rule.taxIncluded \r\n        ? (() => {\r\n          return (\r\n            <div class=\"wqe--footer\">\r\n              <div class=\"wqe--entry wqe-for-total\">\r\n                <div class=\"wqe--prop wqe-for-name\">{_Tv('Total')}</div>\r\n                <div class=\"wqe--prop wqe-for-value\">{pricePrefix}<span><span class=\"wqe-lct-enabled\" id={detailsState.total} key={detailsState.total} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(detailsState.total)}</span></span>{priceSuffix}</div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })() : (() => {\r\n          const subtotal = detailsState.total\r\n          const totalwt = reduceHash((cur, key, tax) => {\r\n            return cur + tax\r\n          }, subtotal, detailsState.taxes)\r\n          const defaultTax = detailsState.taxes.hasOwnProperty('') ? detailsState.taxes[''] : null\r\n          return (\r\n            <div class=\"wqe--footer\">\r\n              <div class=\"wqe--entry wqe-for-subtotal\">\r\n                <div class=\"wqe--prop wqe-for-name\">{_Tv('Subtotal')}</div>\r\n                <div class=\"wqe--prop wqe-for-value\">{pricePrefix}<span><span class=\"wqe-lct-enabled\" id={subtotal} key={subtotal} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(subtotal)}</span></span>{priceSuffix}</div>\r\n              </div>\r\n              {defaultTax !== null ? (\r\n                <div class=\"wqe--entry wqe-for-tax wqe-rate-common\">\r\n                  <div class=\"wqe--prop wqe-for-name\">{sprintf(_Tv('Tax (common %s%%)'), \"\"+rule.taxRate)}</div>\r\n                  <div class=\"wqe--prop wqe-for-value\">{pricePrefix}<span><span class=\"wqe-lct-enabled\" id={defaultTax} key={defaultTax} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(defaultTax)}</span></span>{priceSuffix}</div>\r\n                </div>\r\n              ) : null}\r\n              {reduceHash((cur, key, tax) => {\r\n                if (key === \"\") return cur\r\n                return [...cur, \r\n                  <div class=\"wqe--entry wqe-for-tax wqe-rate-individual\">\r\n                    <div class=\"wqe--prop wqe-for-name\">{sprintf(_Tv('Tax (%s%%)'), \"\"+key)}</div>\r\n                    <div class=\"wqe--prop wqe-for-value\">{pricePrefix}<span><span class=\"wqe-lct-enabled\" id={tax} key={tax} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(tax)}</span></span>{priceSuffix}</div>\r\n                  </div>\r\n                ]\r\n              }, [], detailsState.taxes)}\r\n              <div class=\"wqe--entry wqe-for-total\">\r\n                <div class=\"wqe--prop wqe-for-name\">{_Tv('Total')}</div>\r\n                <div class=\"wqe--prop wqe-for-value\">{pricePrefix}<span><span class=\"wqe-lct-enabled\" id={totalwt} key={totalwt} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(totalwt)}</span></span>{priceSuffix}</div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })()\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst attrItem_table = {}\r\nconst MSG_REQUIRED = 'Input here'\r\nconst MSG_INVALID = 'Invalid'\r\nconst MSG_TOCHECK = 'Check here'\r\nconst MSG_TOSELECT = 'Select here'\r\nconst MSG_DIFFERENT = 'Repeat here'\r\nconst MSG_TOOSMALL = 'Too small'\r\nconst MSG_TOOLARGE = 'Too large'\r\nconst MSG_HIRAGANA = 'Input in Hiragana'\r\nconst MSG_KATAKANA = 'Input in Katakana'\r\n\r\n// {type, id, name, required, note, divided}\r\nattrItem_table.Name = {}\r\nattrItem_table.Name.view = (item, state, actions) => {\r\n  const id = `wqe-attr-name-${item.id}`\r\n  if (! item.divided) {\r\n    const name = `name-${item.id}`\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wqe-belongs-attr wqe-for-name`} key={id}>\r\n        <TextInput type=\"text\" size=\"normal\" name={name} placeholder={_T('Your Name')} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wqe-belongs-attr wqe-belongs-name wq_attr-${item.id}`} />\r\n      </Control>\r\n    )\r\n  } else {\r\n    const names = [`name-${item.id}-0`, `attr-${item.id}-1`]\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wqe-belongs-attr wqe-for-name wqe-is-divided`} key={id}>\r\n        <InputGroup gutter=\"mini\" xclass={`wqe-belongs-attr wqe-belongs-name`}>\r\n          <TextInput type=\"text\" size=\"small\" name={names[0]} placeholder={_T('First Name')} value={state.value[0]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wqe-belongs-attr wqe-belongs-name wq_attr-${item.id}`} />\r\n          <TextInput type=\"text\" size=\"small\" name={names[1]} placeholder={_T('Last Name')} value={state.value[1]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wqe-belongs-attr wqe-belongs-name wq_attr-${item.id}`} />\r\n        </InputGroup>\r\n      </Control>\r\n    )\r\n  }\r\n}\r\nattrItem_table.Name.initialState = (item) => {\r\n  if (item.divided) {\r\n    return {value:[\"\", \"\"], message:null}\r\n  } else {\r\n    return {value:\"\", message:null}\r\n  }\r\n}\r\nattrItem_table.Name.compile = (item, state) => {\r\n  if (item.divided) {\r\n    return state.value.join(' ')\r\n  } else {\r\n    return state.value\r\n  }\r\n}\r\nattrItem_table.Name.hiraganaPattern = /^([ぁ-ん]|ー| |　)+$/\r\nattrItem_table.Name.katakanaPattern = /^([ァ-ン]|ー| |　)+$/\r\nattrItem_table.Name.validate = (item, state) => {\r\n  if (item.divided) {\r\n    if (!item.required && state.value[0] == \"\" && state.value[1] == \"\") {\r\n      // thru\r\n    } else if (state.value[0] == \"\" || state.value[1] == \"\") {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (item.pattern == 'hiragana' && (!state.value[0].match(attrItem_table.Name.hiraganaPattern) || !state.value[1].match(attrItem_table.Name.hiraganaPattern))) {\r\n      return {value:state.value, message:MSG_HIRAGANA}\r\n    } else if (item.pattern == 'katakana' && (!state.value[0].match(attrItem_table.Name.katakanaPattern) || !state.value[1].match(attrItem_table.Name.katakanaPattern))) {\r\n      return {value:state.value, message:MSG_KATAKANA}\r\n    }\r\n    return {value:state.value, message:null}\r\n  } else {\r\n    if (!item.required && state.value == \"\") {\r\n      // thru\r\n    } else if (state.value == \"\") {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (item.pattern == 'hiragana' && !state.value.match(attrItem_table.Name.hiraganaPattern)) {\r\n      return {value:state.value, message:MSG_HIRAGANA}\r\n    } else if (item.pattern == 'katakana' && !state.value.match(attrItem_table.Name.katakanaPattern)) {\r\n      return {value:state.value, message:MSG_KATAKANA}\r\n    }\r\n    return {value:state.value, message:null}\r\n  }\r\n}\r\nattrItem_table.Name.createActions = (item) => {\r\n  if (item.divided) {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        return {...state, value:replaceElement(state.value, idx, ev.currentTarget.value)}\r\n      }, \r\n      onblur: (ev) => (state, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        if (idx == 1) {\r\n          if (!item.required && state.value[0] == \"\" && state.value[1] == \"\") {\r\n            // thru\r\n          } else if (state.value[0] == \"\" || state.value[1] == \"\") {\r\n            return {value:state.value, message:MSG_REQUIRED}\r\n          } else if (item.pattern == 'hiragana' && (!state.value[0].match(attrItem_table.Name.hiraganaPattern) || !state.value[1].match(attrItem_table.Name.hiraganaPattern))) {\r\n            return {value:state.value, message:MSG_HIRAGANA}\r\n          } else if (item.pattern == 'katakana' && (!state.value[0].match(attrItem_table.Name.katakanaPattern) || !state.value[1].match(attrItem_table.Name.katakanaPattern))) {\r\n            return {value:state.value, message:MSG_KATAKANA}\r\n          }\r\n        }\r\n        return {...state, message:null}\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        return {value:ev.currentTarget.value, message:state.message}\r\n      }, \r\n      onblur: (ev) => (state, _actions) => {\r\n        if (!item.required && state.value == \"\") {\r\n          // thru\r\n        } else if (state.value == \"\") {\r\n          return {value:state.value, message:MSG_REQUIRED}\r\n        } else if (item.pattern == 'hiragana' && !state.value.match(attrItem_table.Name.hiraganaPattern)) {\r\n          return {value:state.value, message:MSG_HIRAGANA}\r\n        } else if (item.pattern == 'katakana' && !state.value.match(attrItem_table.Name.katakanaPattern)) {\r\n          return {value:state.value, message:MSG_KATAKANA}\r\n        }\r\n        return {value:state.value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, repeated}\r\nattrItem_table.Email = {}\r\nattrItem_table.Email.view = (item, state, actions) => {\r\n  const id = `wqe-attr-email-${item.id}`\r\n  if (item.repeated) {\r\n    const names = [`email-${item.id}-0`, `email-${item.id}-1`]\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wqe-belongs-attr wqe-for-email\" key={id}>\r\n        <TextInput type=\"text\" size=\"full\" name={names[0]} placeholder={_T('info@example.com')} value={state.value[0]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wqe-belongs-attr wqe-belongs-email wq_attr-${item.id}`} />\r\n        <TextInput type=\"text\" size=\"full\" name={names[1]} placeholder={_T('Confirm again')} value={state.value[1]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wqe-belongs-attr wqe-belongs-email wq_attr-${item.id}`} />\r\n      </Control>\r\n    )\r\n  } else {\r\n    const name = `email-${item.id}`\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wqe-belongs-attr wqe-for-email\" key={id}>\r\n        <TextInput type=\"text\" size=\"full\" name={name} placeholder={_T('info@example.com')} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wqe-belongs-attr wqe-belongs-email wq_attr-${item.id}`} />\r\n      </Control>\r\n    )\r\n  }\r\n}\r\nattrItem_table.Email.pattern = /^([a-zA-Z0-9])+([a-zA-Z0-9\\._-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+$/\r\nattrItem_table.Email.initialState = (item) => {\r\n  if (item.repeated) {\r\n    return {value:[\"\", \"\"], message:null}\r\n  } else {\r\n    return {value:\"\", message:null}\r\n  }\r\n}\r\nattrItem_table.Email.compile = (item, state) => {\r\n  if (item.repeated) {\r\n    return state.value[0]\r\n  } else {\r\n    return state.value\r\n  }\r\n}\r\nattrItem_table.Email.validate = (item, state) => {\r\n  if (item.repeated) {\r\n    if (!item.required && state.value[0] == \"\" && state.value[1] == \"\") {\r\n      // thru\r\n    } else if (state.value[0] == \"\" || state.value[1] == \"\") {\r\n      return {...state, message:MSG_REQUIRED}\r\n    } else if (!state.value[0].match(attrItem_table.Email.pattern)) {\r\n      return {...state, message:MSG_INVALID}\r\n    } else if (state.value[0] != state.value[1]) {\r\n      return {...state, message:MSG_DIFFERENT}\r\n    }\r\n    return {...state, message:null}\r\n  } else {\r\n    if (!item.required && state.value == \"\") {\r\n      // thru\r\n    } else if (state.value == \"\") {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (!state.value.match(attrItem_table.Email.pattern)) {\r\n      return {value:state.value, message:MSG_INVALID}\r\n    }\r\n    return {value:state.value, message:null}\r\n  }\r\n}\r\nattrItem_table.Email.createActions = (item) => {\r\n  if (item.repeated) {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        return {...state, value:replaceElement(state.value, idx, ev.currentTarget.value)}\r\n      }, \r\n      onblur: (ev) => ({value, _message}, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        if (idx == 1) {\r\n          if (!item.required && value[0] == \"\" && value[1] == \"\") {\r\n            // thru\r\n          } else if (value[0] == \"\" || value[1] == \"\") {\r\n            return {value, message:MSG_REQUIRED}\r\n          } else if (!value[0].match(attrItem_table.Email.pattern)) {\r\n            return {value, message:MSG_INVALID}\r\n          } else if (value[0] != value[1]) {\r\n            return {value, message:MSG_DIFFERENT}\r\n          }\r\n        }\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        return {value:ev.currentTarget.value, message:state.message}\r\n      }, \r\n      onblur: (ev) => ({value, _message}, _actions) => {\r\n        if (!item.required && value == \"\") {\r\n          // thru\r\n        } else if (value == \"\") {\r\n          return {value, message:MSG_REQUIRED}\r\n        } else if (!value.match(attrItem_table.Email.pattern)) {\r\n          return {value, message:MSG_INVALID}\r\n        }\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, divided, required, note}\r\nattrItem_table.Tel = {}\r\nattrItem_table.Tel.view = (item, state, actions) => {\r\n  const id = `wqe-attr-tel-${item.id}`\r\n  if (item.divided) {\r\n    const name = `tel-${item.id}`\r\n    const phs = _T('03-1111-2222').split('-')\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wqe-belongs-attr wqe-for-tel\" key={id}>\r\n        <InputGroup xclass=\"wqe-belongs-attr wqe-belongs-tel\">\r\n          <TextInput type=\"tel\" size=\"nano\" name={name+'-0'} placeholder={phs[0]} value={state.value[0]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wqe-belongs-attr wqe-belongs-tel wq_attr-${item.id}`} />\r\n          <span>-</span>\r\n          <TextInput type=\"tel\" size=\"mini\" name={name+'-1'} placeholder={phs[1]} value={state.value[1]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wqe-belongs-attr wqe-belongs-tel wq_attr-${item.id}`} />\r\n          <span>-</span>\r\n          <TextInput type=\"tel\" size=\"mini\" name={name+'-2'} placeholder={phs[2]} value={state.value[2]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wqe-belongs-attr wqe-belongs-tel wq_attr-${item.id}`} />\r\n        </InputGroup>\r\n      </Control>\r\n    )\r\n  } else {\r\n    const name = `tel-${item.id}`\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wqe-belongs-attr wqe-for-tel\" key={id}>\r\n        <TextInput type=\"tel\" size=\"small\" name={name} placeholder={_T('03-1111-2222')} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wqe-belongs-attr wqe-belongs-tel wq_attr-${item.id}`} />\r\n      </Control>\r\n    )\r\n  }\r\n}\r\nattrItem_table.Tel.initialState = (item) => {\r\n  if (item.divided) {\r\n    return {value:[\"\", \"\", \"\"], message:null}\r\n  } else {\r\n    return {value:\"\", message:null}\r\n  }\r\n}\r\nattrItem_table.Tel.compile = (item, state) => {\r\n  if (item.divided) {\r\n    return (state.value[0] == '') ? '' : state.value.join('-')\r\n  } else {\r\n    return state.value\r\n  }\r\n}\r\nattrItem_table.Tel.validate = (item, state) => {\r\n  if (item.divided) {\r\n    if (!item.required && state.value.every(emptyString)) {\r\n      // thru\r\n    } else if (state.value.some(emptyString)) {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (! state.value.join('').match(/^[0-9]+$/)) {\r\n      return {value:state.value, message:MSG_INVALID}\r\n    }\r\n    return {value:state.value, message:null}\r\n  } else {\r\n    if (!item.required && state.value == \"\") {\r\n      // thru\r\n    } else if (state.value == \"\") {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (! state.value.match(/^[0-9-]+$/)) {\r\n      return {value:state.value, message:MSG_INVALID}\r\n    }\r\n    return {value:state.value, message:null}\r\n  }\r\n}\r\nattrItem_table.Tel.createActions = (item) => {\r\n  if (item.divided) {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        return {...state, value:replaceElement(state.value, idx, ev.currentTarget.value)}\r\n      }, \r\n      onblur: (ev) => ({value, _message}, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        if (idx == 2) {\r\n          if (!item.required && value.every(emptyString)) {\r\n            // thru\r\n          } else if (value.some(emptyString)) {\r\n            return {value, message:MSG_REQUIRED}\r\n          } else if (! value.join('').match(/^[0-9]+$/)) {\r\n            return {value, message:MSG_INVALID}\r\n          }\r\n        }\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        return {...state, value:ev.currentTarget.value}\r\n      }, \r\n      onblur: (ev) => ({value, _message}, _actions) => {\r\n        if (!item.required && value == \"\") {\r\n          // thru\r\n        } else if (value == \"\") {\r\n          return {value, message:MSG_REQUIRED}\r\n        } else if (! value.match(/^[0-9-]+$/)) {\r\n          return {value, message:MSG_INVALID}\r\n        }\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, autoFill}\r\nattrItem_table.Address = {}\r\nattrItem_table.Address.view = (item, state, actions) => {\r\n  const id = `wqe-attr-address-${item.id}`\r\n  const name = `address-${item.id}`\r\n  return (\r\n    <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wqe-belongs-attr wqe-for-address`} key={id}>\r\n      <InputGroup gutter=\"mini\" xclass=\"wqe-belongs-attr wqe-belongs-address\">\r\n        <span>{_Tv('Zip')}</span>\r\n        <TextInput type=\"tel\" name={`${name}-0`} size=\"small\" value={state.value[0]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('000-0000')} invalid={!!state.message} xclass={`wqe-belongs-attr wqe-belongs-address wqe-for-zip wq_attr-${item.id}`} />\r\n      </InputGroup>\r\n      <InputGroup gutter=\"mini\" xclass=\"wqe-belongs-attr wqe-belongs-address\">\r\n        <TextInput type=\"text\" name={`${name}-1`} size=\"small\" value={state.value[1]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('Tokyo')} invalid={!!state.message} xclass={`wqe-belongs-attr wqe-belongs-address wqe-for-pref wq_attr-${item.id}`} />\r\n        <TextInput type=\"text\" name={`${name}-2`} size=\"small\" value={state.value[2]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('Chiyoda-ku')} invalid={!!state.message} xclass={`wqe-belongs-attr wqe-belongs-address wqe-for-city wq_attr-${item.id}`} />\r\n      </InputGroup>\r\n      <TextInput type=\"text\" name={`${name}-3`} size=\"full\" value={state.value[3]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('1-1-1, Chiyoda')} invalid={!!state.message} xclass={`wqe-belongs-attr wqe-belongs-address wqe-for-street wq_attr-${item.id}`} />\r\n      <TextInput type=\"text\" name={`${name}-4`} size=\"full\" value={state.value[4]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('Chiyoda mansion 8F')} invalid={!!state.message} xclass={`wqe-belongs-attr wqe-belongs-address wqe-for-room wq_attr-${item.id}`} />\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.Address.initialState = (_item) => ({message:null, value:[\"\", \"\", \"\", \"\", \"\"]})\r\nattrItem_table.Address.compile = (_item, state) => {\r\n  if (state.value.every(emptyString)) {\r\n    return \"\"\r\n  } else {\r\n    return `${state.value[0]} ${state.value[1]}${state.value[2]}${state.value[3]} ${state.value[4]}`\r\n  }\r\n}\r\nattrItem_table.Address.validate = (item, {value, message}) => {\r\n  if (!item.required && value.every(emptyString)) {\r\n    // thru\r\n  } else if (value[0] == \"\" || value[1] == \"\" || value[2] == \"\" || value[3] == \"\") {\r\n    return {value, message:MSG_REQUIRED}\r\n  } else if (! value[0].match(new RegExp(_T('^[0-9]{3}-?[0-9]{4}$')))) {\r\n    return {value, message:MSG_INVALID}\r\n  }\r\n  return {value, message:null}\r\n}\r\nattrItem_table.Address.createActions = (item) => {\r\n  return {\r\n    oninput: (ev) => (state, actions) => {\r\n      const idx = branchNo(ev.currentTarget.name, '-')\r\n      const curval = ev.currentTarget.value\r\n      if (item.autoFill == 'yubinbango' && idx == 0 && curval.match(new RegExp(_T('^[0-9]{3}-?[0-9]{4}$')))) {\r\n        window.requestAnimationFrame(() => complementAddress(curval, actions.onfill))\r\n      }\r\n      return {...state, value:replaceElement(state.value, idx, curval)}\r\n    }, \r\n    onblur: (ev) => ({value, message}, actions) => {\r\n      const idx = branchNo(ev.currentTarget.name, '-')\r\n      if (idx == 4) {\r\n        if (!item.required && value.every(emptyString)) {\r\n          // thru\r\n        } else if (value[0] == \"\" || value[1] == \"\" || value[2] == \"\" || value[3] == \"\") {\r\n          return {value, message:MSG_REQUIRED}\r\n        } else if (! value[0].match(new RegExp(_T('^[0-9]{3}-?[0-9]{4}$')))) {\r\n          return {value, message:MSG_INVALID}\r\n        }\r\n      }\r\n      return {value, message:null}\r\n    }, \r\n    onfill: (fs) => ({value, message}, actions) => {\r\n      value = [value[0], fs.region, fs.locality, fs.street, value[4]]\r\n      return {value, message}\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note}\r\nattrItem_table.Checkbox = {}\r\nattrItem_table.Checkbox.view = (item, state, actions) => {\r\n  const id = `wqe-attr-checkbox-${item.id}`\r\n  const name = `checkbox-${item.id}`\r\n  return (\r\n    <Control label=\"\" required={false} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wqe-belongs-attr wqe-for-checkbox\" key={id}>\r\n      <InputGroup xclass=\"wqe-belongs-attr wqe-belongs-checkbox\">\r\n        <Checkbox name={name} value=\"true\" checked={state.checked} invalid={!!state.message} onchange={actions.onchange} xclass={`wqe-belongs-attr wqe-belongs-checkbox wq_attr-${item.id}`}>{item.name}</Checkbox>\r\n      </InputGroup>\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.Checkbox.initialState = (item) => ({checked:!!item.initialValue, message:null})\r\nattrItem_table.Checkbox.compile = (_item, state) => (state.checked ? _Tv('Checked') : '')\r\nattrItem_table.Checkbox.validate = (item, state) => {\r\n  if (item.required && !state.checked) {\r\n    return {checked:state.checked, message:MSG_TOCHECK}\r\n  }\r\n  return (state.message == null) ? state : {checked:state.checked, message:null}\r\n}\r\nattrItem_table.Checkbox.createActions = (item) => {\r\n  return {\r\n    onchange: (ev) => ({checked, message}, actions) => {\r\n      if (ev.currentTarget.checked) {\r\n        return {checked:true, message:null}\r\n      } else if (item.required) {\r\n        return {checked:false, message:MSG_TOCHECK}\r\n      } else {\r\n        return {checked:false, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, options}\r\nattrItem_table.Radio = {}\r\nattrItem_table.Radio.view = (item, state, actions) => {\r\n  const id = `wqe-attr-radio-${item.id}`\r\n  const name = `radio-${item.id}`\r\n  return (\r\n    <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wqe-belongs-attr wqe-for-radio\" key={id}>\r\n      <InputGroup gutter=\"mini\" xclass=\"wqe-belongs-attr wqe-belongs-radio\">\r\n        {item.options.map((opt, i) => {\r\n          return (\r\n            <RadioButton name={name} value={opt} checked={state.value == opt} invalid={!!state.message} onchange={actions.onchange} index={i} xclass={`wqe-belongs-attr wqe-belongs-radio wq_attr-${item.id}`}>{opt}</RadioButton>\r\n          )\r\n        })}\r\n      </InputGroup>\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.Radio.initialState = (item) => {\r\n  const vs = item.options.filter(o => o == item.initialValue)\r\n  return {value:vs.length > 0 ? vs[0] : null, message:null}\r\n}\r\nattrItem_table.Radio.compile = (_item, state) => state.value\r\nattrItem_table.Radio.validate = (item, state) => {\r\n  if (!item.required && state.value == null) {\r\n    // thru\r\n  } else if (state.value == null) {\r\n    return {value:state.value, message:MSG_TOSELECT}\r\n  } else if (indexOf(state.value, item.options) == -1) {\r\n    return {value:state.value, message:MSG_INVALID}\r\n  }\r\n  return {value:state.value, message:null}\r\n}\r\nattrItem_table.Radio.createActions = (item) => {\r\n  return {\r\n    onchange: (ev) => ({value, message}, actions) => {\r\n      if (ev.currentTarget.checked) {\r\n        const value = ev.currentTarget.value || null\r\n        reserveProcess()\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, options}\r\nattrItem_table.Dropdown = {}\r\nattrItem_table.Dropdown.view = (item, state, actions) => {\r\n  const id = `wqe-attr-dropdown-${item.id}`\r\n  const name = `dropdown-${item.id}`\r\n  const placeholder = _T('Please select')\r\n  return (\r\n    <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wqe-belongs-attr wqe-for-dropdown\" key={id}>\r\n      <Select name={name} options={item.options} value={state.value} invalid={!!state.message} onchange={actions.onchange} xclass={`wqe-belongs-attr wqe-belongs-select wq_attr-${item.id}`} placeholder={placeholder} clearable={!item.required} />\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.Dropdown.initialState = attrItem_table.Radio.initialState\r\nattrItem_table.Dropdown.compile = attrItem_table.Radio.compile\r\nattrItem_table.Dropdown.validate = attrItem_table.Radio.validate\r\nattrItem_table.Dropdown.createActions = (item) => {\r\n  return {\r\n    onchange: (ev) => ({_value, message}, actions) => {\r\n      const value = ev.currentTarget.value || null\r\n      reserveProcess()\r\n      return {value, message: (!value && item.required) ? MSG_TOSELECT : null}\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, options, initialValue}\r\nattrItem_table.MultiCheckbox = {}\r\nattrItem_table.MultiCheckbox.view = (item, state, actions) => {\r\n  const id = `wqe-attr-multicheckbox-${item.id}`\r\n  const name = `multicheckbox-${item.id}`\r\n  return (\r\n    <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wqe-belongs-attr wqe-for-multicheckbox\" key={id}>\r\n      <InputGroup gutter=\"mini\" xclass=\"wqe-belongs-attr wqe-belongs-multicheckbox\">\r\n        {item.options.map((opt, i) => {\r\n          return (\r\n            <Checkbox id={`${id}-${i}`} name={name} value={opt} checked={indexOf(opt, state.value) != -1} invalid={!!state.message} onchange={actions.onchange} xclass={`wqe-belongs-attr wqe-belongs-multicheckbox wq_attr-${item.id}`}>{opt}</Checkbox>\r\n          )\r\n        })}\r\n      </InputGroup>\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.MultiCheckbox.initialState = (item) => {\r\n  return {value:item.initialValue, message:null}\r\n}\r\nattrItem_table.MultiCheckbox.compile = (_item, state) => state.value\r\nattrItem_table.MultiCheckbox.validate = (item, state) => {\r\n  if (!item.required && state.value.length == 0) {\r\n    // thru\r\n  } else if (state.value.length == 0) {\r\n    return {value:state.value, message:MSG_TOSELECT}\r\n  }\r\n  return {value:state.value, message:null}\r\n}\r\nattrItem_table.MultiCheckbox.createActions = (item) => {\r\n  return {\r\n    onchange: (ev) => ({value, message}, actions) => {\r\n      const v = ev.currentTarget.value\r\n      return {\r\n        value: ev.currentTarget.checked ? [...value, v] : value.filter(v0 => v0 != value), \r\n        message: null\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, size, placeholder, multiline}\r\nattrItem_table.Text = {}\r\nattrItem_table.Text.view = (item, state, actions) => {\r\n  const id = `wqe-attr-text-${item.id}`\r\n  const name = `text-${item.id}`\r\n  if (item.multiline) {\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wqe-belongs-attr wqe-for-text wqe-has-textarea`} key={id}>\r\n        <TextArea size={item.size} name={name} placeholder={item.placeholder} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wqe-belongs-attr wqe-belongs-text wq_attr-${item.id}`} /> \r\n      </Control>\r\n    )\r\n  } else {\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wqe-belongs-attr wqe-for-text`}>\r\n        <TextInput type=\"text\" size={item.size} name={name} placeholder={item.placeholder} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wqe-belongs-attr wqe-belongs-text wq_attr-${item.id}`} /> \r\n      </Control>\r\n    )\r\n  }\r\n}\r\nattrItem_table.Text.initialState = (_item) => ({value:\"\", message:null})\r\nattrItem_table.Text.compile = (_item, state) => state.value\r\nattrItem_table.Text.validate = (item, state) => {\r\n  if (item.required && state.value == \"\") {\r\n    return {value:state.value, message:MSG_REQUIRED}\r\n  }\r\n  return (state.message == null) ? state : {value:state.value, message:null}\r\n}\r\nattrItem_table.Text.createActions = (item) => {\r\n  return {\r\n    oninput: (ev) => (state, _actions) => {\r\n      return {...state, value:ev.currentTarget.value}\r\n    }, \r\n    onblur: (ev) => (state, _actions) => {\r\n      if (item.required && state.value == \"\") {\r\n        return {value:state.value, message:MSG_REQUIRED}\r\n      } else {\r\n        return {value:state.value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {id, type, action, siteKey}\r\nattrItem_table.reCAPTCHA3 = {}\r\nattrItem_table.reCAPTCHA3.view = (item, state, actions) => null\r\nattrItem_table.reCAPTCHA3.initialState = item => {\r\n  window.setTimeout(() => {\r\n    // Gutenberg executes this code *before* document.body initialized.\r\n    // So defer its execution.\r\n    var e = document.createElement(\"script\");\r\n    e.setAttribute('src', `https://www.google.com/recaptcha/api.js?render=${item.siteKey}`)\r\n    document.body.appendChild(e)\r\n  }, 1000)\r\n  \r\n  return {value:\"\", message:null}\r\n}\r\nattrItem_table.reCAPTCHA3.compile = (item, _state) => {\r\n  return (postfix) => {\r\n    grecaptcha.execute(item.siteKey, {action: item.action}).then(token => {\r\n      postfix(token)\r\n    })\r\n  }\r\n}\r\nattrItem_table.reCAPTCHA3.validate = (item, state) => {\r\n  return state\r\n}\r\nattrItem_table.reCAPTCHA3.createActions = (item) => {{}}\r\n\r\n\r\nconst assembleAttrItems = (items) => {\r\n  return items.reduce(({state, actions}, item) => {\r\n    const s = attrItem_table[item.type].initialState(item)\r\n    const a = attrItem_table[item.type].createActions(item)\r\n    return {actions:{...actions, [item.id]:a}, state:{...state, [item.id]:s}}\r\n  }, {actions:{}, state:{}})\r\n}\r\n\r\nconst viewAttrItems = (state, actions) => {\r\n  return (\r\n    <div class=\"wqe-Attributes\">\r\n      {form.attrItems.map(item => {\r\n        return attrItem_table[item.type].view(item, state[item.id], actions[item.id])\r\n      })}\r\n    </div>\r\n  )\r\n}\r\nconst viewAttrItemsToConfirm = (state, actions) => {\r\n  return (\r\n    <div class=\"wqe-Attributes wqe-is-confirming\">\r\n      {form.attrItems.map(item => {\r\n        if (item.type == 'reCAPTCHA3') return null\r\n        const id = `wqe-attr-${item.type.toLowerCase()}-${item.id}`\r\n        return (\r\n          <Control label={item.name} required={item.required} id={id} key={id}>\r\n            <Echo value={attrItem_table[item.type].compile(item, state[item.id])} xclass={`wqe-belongs-attr wq_attr-${item.id}`} glue={_T(', ')}></Echo>\r\n          </Control>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst validateAttrData = (state) => {\r\n  return form.attrItems.reduce((state, item) => {\r\n    const s = attrItem_table[item.type].validate(item, state[item.id])\r\n    if (s === state[item.id]) return state\r\n    return {...state, [item.id]:s}\r\n  }, state)\r\n}\r\n\r\n\r\n/*\r\n * ===============================================================\r\n * domain\r\n */\r\n\r\n// Catalog = string{}\r\n// SelectOption = {id:number, image:?string, name:string, note:?string, normalPrice:?number, price:number, labels:any{}, depends:any{}}\r\n// Select = {type:'Select', id:number, image:?string, name:string, note:?string, multiple:bool, options:SelectOption[]}\r\n// Hidden = {type:'Hidden', id:number, image:?string, category:?string, name:string, price:number, depends:any{}}\r\n// Item = Select | Hidden\r\n// Form = {id:number, items:Item[]}\r\n// SelectedOptions = any{}\r\n// Input = SelectedOptions\r\n// State = {inputs:Input{}, labels:any{}}\r\n// Detail = {category:?string, name:string, unitPrice:number, quantity:number}\r\n\r\n\r\nconst createDetail = (key, category, name, quantity, unitPrice, taxRate, operatable) => {\r\n  return {key, category, name, quantity, unitPrice, taxRate, operatable}\r\n}\r\n\r\nconst reserveProcess = () => {\r\n  window.requestAnimationFrame(allActions.onprocess)\r\n}\r\nconst onprocess = () => (state, actions) => {\r\n  const attrs = form.attrItems.reduce((cur, item) => {\r\n    const value = attrItem_table[item.type].compile(item, state.attrs[\"\"+item.id])\r\n    cur[\"\"+item.id] = value\r\n    return cur\r\n  }, {})\r\n\r\n  const {inputs, ...rest} = process(state.details.data, attrs)\r\n  const details = {...state.details, ...rest, data:inputs}\r\n  return {...state, details}\r\n}\r\nconst process = (inputs, attrs) => {\r\n  const {refTotal:_unused, ...rv} = form.detailItems.reduce((cur, item) => {\r\n    return processTable[item.type](cur, item, attrs)\r\n  }, {inputs, labels:{}, details:[], total:0, refTotal:0, messages:[]})\r\n\r\n  if (rule.taxIncluded) return rv\r\n\r\n  const subtotals = rv.details.reduce((subtotals, detail) => {\r\n    const key = detail.taxRate === null ? \"\" : (\"\"+detail.taxRate)\r\n    const subtotal = (\r\n      subtotals.hasOwnProperty(key) ? subtotals[key] : 0\r\n    ) + normalizePrice(rule, detail.unitPrice * detail.quantity)\r\n    return {...subtotals, [key]:subtotal}\r\n  }, {})\r\n\r\n  const taxes = reduceHash((cur, key, subtotal) => {\r\n    const taxRate = key === \"\" ? rule.taxRate : key\r\n    const tax = normalizePrice(rule, subtotal * taxRate * 0.01)\r\n    return {...cur, [key]:tax}\r\n  }, {}, subtotals)\r\n\r\n  return {...rv, subtotals, taxes}\r\n}\r\nconst processTable = {\r\n  Group: (cur, item, attrs) => {\r\n    if (! cur.inputs.hasOwnProperty(item.id)) {\r\n      return cur\r\n    }\r\n    return item.products.reduce((cur, product) => {\r\n      // We check because there can be a case where the option was cleared and the item had no selection.\r\n      if (! cur.inputs.hasOwnProperty(item.id)) {\r\n        return cur\r\n      }\r\n      const selectedProducts = cur.inputs[item.id]\r\n      if (! selectedProducts.hasOwnProperty(product.id)) {\r\n        return cur\r\n      }\r\n      const quantity = selectedProducts[product.id]\r\n      if (quantity == 0) {\r\n        return cur\r\n      }\r\n      const detail = createDetail(`Product-${item.id}-${product.id}`, item.name, product.name, quantity, product.price, product.taxRate, true)\r\n      const details = [...cur.details, detail]\r\n      const nprice = normalizePrice(rule, detail.unitPrice * detail.quantity)\r\n      const total = cur.total + nprice\r\n      const refTotal = cur.refTotal + nprice\r\n      return {...cur, details, total, refTotal}\r\n    }, cur)\r\n  }, \r\n  Auto: (cur, item, attrs) => {\r\n    if (! subsetOf(cur.labels, item.depends)) {\r\n      return cur\r\n    }\r\n    const detail = createDetail(`Auto-${item.id}`, item.category, item.name, 1, item.price, item.taxRate, false)\r\n    const details = [...cur.details, detail]\r\n    const nprice = normalizePrice(rule, detail.unitPrice * detail.quantity)\r\n    const total = cur.total + nprice\r\n    const refTotal = cur.refTotal + nprice\r\n    return {...cur, details, total, refTotal}\r\n  }, \r\n  PriceWatcher: (cur, item, attrs) => {\r\n    if (! compare2(cur.total, item.lower, item.lowerIncluded, item.higher, item.higherIncluded)) {\r\n      return cur\r\n    }\r\n    const labels = {...cur.labels, ...item.labels}\r\n    return {...cur, labels}\r\n  }, \r\n  Stop: (cur, item, attrs) => {\r\n    if (subsetOf(cur.labels, item.depends)) {\r\n      const messages = [...cur.messages, item.message]\r\n      return {...cur, messages}\r\n    }\r\n    return cur\r\n  }\r\n}\r\n\r\n\r\n//const validateDetailDataForItem = (detailData, item) => {\r\n//  const msg = validate_table[item.type](detailData, item)\r\n//  return msg\r\n//}\r\n//const validateDetailData = (detailData) => {\r\n//  return form.detailItems.reduce((messages, item) => {\r\n//    const message = validate_table[item.type](detailData, item)\r\n//    if (message) {\r\n//      return {...messages, [item.id]:message}\r\n//    } else {\r\n//      return messages\r\n//    }\r\n//  }, {})\r\n//}\r\n//const validate_table = {\r\n//  Group: (detailData, item) => null, \r\n//  Auto: (detailData, item) => null, \r\n//  PriceWatcher: (detailData, item) => null\r\n//}\r\n\r\nconst detailActions = {\r\n  decr: (ev) => (state, actions) => {\r\n    const [_unused, gid, pid] = ev.currentTarget.name.split('-')\r\n    const selectedProducts0 = state.data.hasOwnProperty(gid) ? state.data[gid] : {}\r\n    const quantity0 = selectedProducts0.hasOwnProperty(pid) ? selectedProducts0[pid] : 0\r\n    const quantity = (quantity0 <= 0) ? 0 : quantity0 - 1\r\n    const selectedProducts = {...selectedProducts0, [pid]:quantity}\r\n    const data = {...state.data, [gid]:selectedProducts}\r\n    reserveProcess()\r\n    return {...state, data}\r\n  }, \r\n  incr: (ev) => (state, actions) => {\r\n    const [_unused, gid, pid] = ev.currentTarget.name.split('-')\r\n    const selectedProducts0 = state.data.hasOwnProperty(gid) ? state.data[gid] : {}\r\n    const quantity0 = selectedProducts0.hasOwnProperty(pid) ? selectedProducts0[pid] : 0\r\n    const quantity = quantity0 + 1\r\n    const selectedProducts = {...selectedProducts0, [pid]:quantity}\r\n    const data = {...state.data, [gid]:selectedProducts}\r\n    reserveProcess()\r\n    return {...state, data}\r\n  }, \r\n  decrByMonitor: (ev) => (state, actions) => {\r\n    const path = ev.currentTarget.name.split('-')\r\n    const [_unused0, _unused1, gid, pid] = path\r\n    const selectedProducts0 = state.data.hasOwnProperty(gid) ? state.data[gid] : {}\r\n    const quantity0 = selectedProducts0.hasOwnProperty(pid) ? selectedProducts0[pid] : 0\r\n    const quantity = (quantity0 <= 0) ? 0 : quantity0 - 1\r\n    const selectedProducts = {...selectedProducts0, [pid]:quantity}\r\n    const data = {...state.data, [gid]:selectedProducts}\r\n    reserveProcess()\r\n    return {...state, data}\r\n  }, \r\n  incrByMonitor: (ev) => (state, actions) => {\r\n    const path = ev.currentTarget.name.split('-')\r\n    const [_unused0, _unused1, gid, pid] = path\r\n    const selectedProducts0 = state.data.hasOwnProperty(gid) ? state.data[gid] : {}\r\n    const quantity0 = selectedProducts0.hasOwnProperty(pid) ? selectedProducts0[pid] : 0\r\n    const quantity = quantity0 + 1\r\n    const selectedProducts = {...selectedProducts0, [pid]:quantity}\r\n    const data = {...state.data, [gid]:selectedProducts}\r\n    reserveProcess()\r\n    return {...state, data}\r\n  }\r\n}\r\n\r\n\r\nconst createDetailState = (attrState) => {\r\n  const attrs = form.attrItems.reduce((cur, item) => {\r\n    const value = attrItem_table[item.type].compile(item, attrState[\"\"+item.id])\r\n    cur[\"\"+item.id] = value\r\n    return cur\r\n  }, {})\r\n  const {inputs:data, ...rest} = process({}, attrs)\r\n  return {...rest, data}\r\n}\r\n\r\nconst onback = (ev) => (state, actions) => {\r\n  window.setTimeout(() => {\r\n    scrollTo(`form-${form.id}`)\r\n  }, 100)\r\n  return {...state, viewMode:form.navigator}\r\n}\r\n\r\n/*const validateForm = (state) => {\r\n  const detailMessages = validateDetailData(state.details.data)\r\n  const attrs = validateAttrData(state.attrs)\r\n  const attrMessages = reduceHash((cur, cid, stt) => {\r\n    return (stt.message == null) ? cur : {...cur, [cid]:stt.message}\r\n  }, {}, attrs)\r\n  if (Object.keys(detailMessages).length || Object.keys(attrMessages).length) {\r\n    // validation failed\r\n    window.requestAnimationFrame(() => {\r\n      if (Object.keys(detailMessages).length) focusErrorInput('wq_detail-', detailMessages)\r\n      else focusErrorInput('wq_attr-', attrMessages)\r\n    }, 100)\r\n    const details = {...state.details, messages:detailMessages}\r\n    return [false, {...state, details, attrs}]\r\n  }\r\n  // validation succeeded\r\n  return [true, state]\r\n}*/\r\n\r\nconst onsubmit = (ev) => (state, actions) => {\r\n  // validate attrs\r\n  const attrs = validateAttrData(state.attrs)\r\n  const attrMessages = reduceHash((cur, cid, stt) => {\r\n    return (stt.message == null) ? cur : {...cur, [cid]:stt.message}\r\n  }, {}, attrs)\r\n  if (state.details.messages.length || Object.keys(attrMessages).length) {\r\n    // validation failed\r\n    if (state.details.messages.length) {\r\n      window.requestAnimationFrame(() => {\r\n        window.alert(state.details.messages[0])\r\n      })\r\n    } else {\r\n      window.requestAnimationFrame(() => {\r\n        focusErrorInput('wq_attr-', attrMessages)\r\n      })\r\n    }\r\n    return {...state, attrs}\r\n  }\r\n\r\n  let viewMode = (form.doConfirm && state.viewMode != 'confirm') ? 'confirm' : 'empty'\r\n  //viewMode = filterByExt('nextViewMode', viewMode, ev)\r\n  if (viewMode == 'confirm') {\r\n    // show confirm view\r\n    window.setTimeout(() => {\r\n      scrollTo(`form-${form.id}`)\r\n    }, 100)\r\n    return {...state, viewMode:'confirm'}\r\n  }\r\n\r\n  //const submitType = filterByExt('nextSubmitType', 'submit', ev)\r\n  const submitType = 'submit'\r\n  const kontinue = (attrs) => {\r\n    if (mode != 'execute') {\r\n      window.requestAnimationFrame(() => {window.alert(_T('Processing stopped due to preview mode.'))});\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      formId: form.id, \r\n      details: state.details.data, \r\n      attrs\r\n    }\r\n    submit(data, actions.onsubmitK, submitType)\r\n  }\r\n\r\n  window.requestAnimationFrame(() => {\r\n    let waitCount = 0\r\n    let compiledAttrs = {}\r\n    form.attrItems.forEach(item => {\r\n      const val = attrItem_table[item.type].compile(item, attrs[item.id])\r\n      if (typeof val == 'function') {\r\n        const postfix = (dataValue) => {\r\n          waitCount--\r\n          compiledAttrs[item.id] = dataValue\r\n          if (waitCount == 0) kontinue(compiledAttrs)\r\n        }\r\n        waitCount++\r\n        val(postfix)\r\n      } else {\r\n        compiledAttrs[item.id] = val\r\n      }\r\n    })\r\n    if (waitCount == 0) kontinue(compiledAttrs)\r\n  })\r\n  \r\n  return {...state, loading:true}\r\n}\r\n\r\nconst onsubmitK = ([resp, submitType]) => (state, actions) => {\r\n  //console.log('onsubmitK', resp, submitType)\r\n  if (submitType == 'confirm') {\r\n    window.requestAnimationFrame(() => {\r\n      window.open(resp)\r\n    });\r\n    return {...state, loading:false}\r\n  } else {\r\n    window.requestAnimationFrame(() => {\r\n      if (form.thanksUrl) {\r\n        window.location.href = form.thanksUrl\r\n      } else {\r\n        window.alert(_T('The form has been successfully submitted.'))\r\n      }\r\n    })\r\n    // we dont set state.loading to `false`.\r\n    //return {...state, loading:false}\r\n  }\r\n}\r\n\r\nconst onHideMonitor = (ev) => (state, actions) => {\r\n  resumeOtherSurfaces();\r\n  return {...state, spMonitorShown:false}\r\n}\r\nconst onShowMonitor = (ev) => (state, actions) => {\r\n  suspendOtherSurfaces();\r\n  return {...state, spMonitorShown:true}\r\n}\r\n\r\nconst findNextIndex = (current, labels) => {\r\n  const len = form.detailItems.length\r\n  for (let i = 0; i < len; i++) {\r\n    if (i <= current) continue;\r\n    const item = form.detailItems[i]\r\n    if (item.type == \"Group\") {\r\n      if (item.products.length > 0) {\r\n        return i\r\n      }\r\n      // thru\r\n    }\r\n  }\r\n  return form.detailItems.length\r\n}\r\nconst findFirstId = () => {\r\n  const len = form.detailItems.length\r\n  for (let i = 0; i < len; i++) {\r\n    const item = form.detailItems[i]\r\n    if (item.type == \"Group\") return item.id\r\n  }\r\n  return -1\r\n}\r\n\r\n/*const findPrevIndex = (current, labels) => {\r\n  if (current <= 0) return -1\r\n  const indice = form.detailItems.reduce((cur, item, i) => {\r\n    if (current <= i) return cur\r\n    if (item.type == \"Group\") {\r\n      if (item.products.length > 0) {\r\n        cur.push(i)\r\n      }\r\n    }\r\n    return cur\r\n  }, [])\r\n  return (indice.length > 0) ? indice.pop() : -1\r\n}*/\r\n\r\n/*const onWizardOpen = (ev) => (state, actions) => {\r\n  const wIndex = findNextIndex(-1, state.details.labels)\r\n  return {...state, wIndex, wIndex2:wIndex, wizardOpen:true, wFlipped:false}\r\n}\r\nconst onWizardClose = (ev) => (state, actions) => {\r\n  return {...state, wIndex:-1, wIndex2:-1, wizardOpen:false}\r\n}\r\nconst onWizardNext = (ev) => (state, actions) => {\r\n  const item = form.detailItems[state.wIndex]\r\n  const msg = validateDetailDataForItem(state.details.data, item)\r\n  if (msg) {\r\n    const messages = {...state.details.messages, [item.id]:msg}\r\n    const details = {...state.details, messages}\r\n    return {...state, details}\r\n  }\r\n  const wIndex = findNextIndex(state.wIndex, state.details.labels)\r\n  if (wIndex == form.detailItems.length) {\r\n    window.setTimeout(actions.onWizardClose, 800)\r\n    window.setTimeout(() => {\r\n      scrollTo('wqe-monitor')\r\n    }, 800)\r\n  } else {\r\n    window.setTimeout(() => actions.onWizardNextK(wIndex), 400)\r\n  }\r\n  return {...state, wIndex, wFlipped:false}\r\n}\r\nconst onWizardNextK = (wIndex2) => (state, actions) => {\r\n  return {...state, wIndex2}\r\n}\r\nconst onWizardPrev = (ev) => (state, actions) => {\r\n  const wIndex = findPrevIndex(state.wIndex, state.details.labels)\r\n  window.setTimeout(() => actions.onWizardPrevK(wIndex), 400)\r\n  return {...state, wIndex, wFlipped:true}\r\n}\r\nconst onWizardPrevK = (wIndex2) => (state, actions) => {\r\n  return {...state, wIndex2}\r\n}*/\r\nconst onSelectGroup = (ev) => (state, actions) => {\r\n  //console.log('onSelectGroup', ev, state)\r\n  const [unused_, gid] = ev.target.name.split('-')\r\n  \r\n  if (behavior.scrollOnGroupSelection) {\r\n    window.setTimeout(() => {\r\n      scrollTo(`form-${form.id}`, true)\r\n    }, 100)\r\n  }\r\n  return {...state, currentId:gid}\r\n}\r\nconst calcMonitorPos = () => {\r\n  const container = document.getElementById(`aforms-eats-form-${form.id}`).children[0]\r\n  const child = document.getElementById('wqe-monitor')\r\n  const crect = container.getBoundingClientRect()\r\n  const vtop = crect.top\r\n  const vbot = crect.bottom\r\n  const ch = child.getBoundingClientRect().height\r\n  //console.log('onscroll', vtop, vbot, crect.left)\r\n  if (vtop > 0) {\r\n    // childをcontainerの上部にくっつける\r\n    return {v:'top', left:Math.round(crect.width)}\r\n  } else if (vbot < ch) {\r\n    // childをcontainerの下部にくっつける\r\n    return {v:'bottom', left:Math.round(crect.width)}\r\n  } else {\r\n    // childを画面にくっつける\r\n    return {v:'screen', left:Math.round(crect.right)}\r\n  }\r\n}\r\nconst calcNavbarPos = () => {\r\n  const container = document.getElementById(`aforms-eats-form-${form.id}`).children[0]\r\n  const child = document.getElementById('wqe-navbar')\r\n  const crect = container.getBoundingClientRect()\r\n  const vtop = crect.top\r\n  const vbot = crect.bottom\r\n  const ch = child.getBoundingClientRect().height\r\n  //console.log('onscroll', vtop, vbot, crect.left)\r\n  if (vtop > 0) {\r\n    // childをcontainerの上部にくっつける\r\n    return {v:'top', left:0, width:crect.width}\r\n  } else if (vbot < ch) {\r\n    // childをcontainerの下部にくっつける\r\n    return {v:'bottom', left:0, width:crect.width}\r\n  } else {\r\n    // childを画面にくっつける\r\n    return {v:'screen', left:crect.left, width:crect.width}\r\n  }\r\n}\r\nconst onscroll = (ev) => (state, actions) => {\r\n  if (state.viewMode == 'confirm') return null\r\n  return {...state, monitorPos:calcMonitorPos(), navbarPos:calcNavbarPos()}\r\n}\r\nconst onresize = (ev) => (state, actions) => {\r\n    //console.log('action/onresize')\r\n  if (state.viewMode == 'confirm') return null\r\n  return {...state, monitorPos:calcMonitorPos(), navbarPos:calcNavbarPos()}\r\n}\r\n\r\n/*\r\n * ===============================================================\r\n * App\r\n */\r\n\r\nconst NavBar = ({state, max, current, pos, actions, navigator}) => {\r\n  return (\r\n    <div class={`wqe-NavBar ${state.viewMode == 'confirm' ? 'wqe-is-confirming' : ''} ${state.spMonitorShown ? 'wqe-is-monitor-shown' : ''} wqe-belongs-${navigator} wqe-sticks-${pos.v}`} style={{left:pos.left+\"px\", width:pos.width+\"px\"}} id=\"wqe-navbar\" key=\"navbar\">\r\n      <div class=\"wqe--menuWrap\">\r\n        <ul class=\"wqe--menu\">\r\n          {form.detailItems.map((item) => {\r\n            if (item.type == 'Group') {\r\n              if (! item.visible || item.products.every(p => p.state == \"hidden\")) return null\r\n              return (\r\n                <li class={`wqe--item ${current == item.id ? 'wqe-is-current' : ''}`}>\r\n                  <a href=\"javascript:void(0);\" onclick={actions.onSelectGroup} name={`navbarmenuitem-${item.id}`}>\r\n                    <div class=\"wqe--media\">\r\n                      <Image src={item.image} scaling=\"center\" xclass={`wqe-belongs-${navigator} wqe-belongs-navbar`} />\r\n                    </div>\r\n                    <div class=\"wqe--main\">\r\n                      <div class=\"wqe--name\">{item.name}</div>\r\n                      <div class=\"wqe--note\">{item.note}</div>\r\n                    </div>\r\n                  </a>\r\n                </li>\r\n              )\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <div class=\"wqe--commands\">\r\n        <Button type=\"normal\" onclick={actions.onShowMonitor} xclass=\"wqe-belongs-navbar wqe-for-showmonitor\"><span><span key={state.details.total} oncreate={tnOnCreate} onremove={tnOnRemove}>{pricePrefix}{nf(state.details.total)}{priceSuffix}</span></span></Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst buildActionButtons = (state, actions) => {\r\n  const submittable = form.attrItems.length > 0\r\n  if (state.viewMode == 'confirm' && (!submittable || !form.doConfirm)) return []\r\n  const intent = \r\n        (!submittable) ? 'empty' \r\n      : ((form.doConfirm && state.viewMode != 'confirm') ? 'confirm' : 'submit')\r\n  const actionButtons = \r\n        (intent == 'submit') \r\n      ? [(<Button type=\"primary\" onclick={actions.onsubmit} disabled={state.loading} xclass=\"wqe-belongs-action wqe-for-submit\">{_Tv('Submit')}</Button>)]\r\n      : ((intent == 'confirm') \r\n      ? [(<Button type=\"primary\" onclick={actions.onsubmit} disabled={state.loading} xclass=\"wqe-belongs-action wqe-for-confirm\">{_Tv('To Confirmation Screen')}</Button>)]\r\n      : [])\r\n  //const rv = filterByExt('viewActionButtons', actionButtons, intent)\r\n  //console.log('buildActionButtons', intent, actionButtons, rv)\r\n  return actionButtons\r\n}\r\n\r\nconst view = (state, actions) => {\r\n  const submittable = form.attrItems.length > 0\r\n  const actionButtons = buildActionButtons(state, actions)\r\n  return (\r\n    <form class={`wqe-Form ${(state.viewMOde == 'confirm' ? 'wqe-is-confirming' : '')}`} id={`form-${form.id}`} novalidate>\r\n      <input type=\"text\" name=\"to-disable-auto-submission\" style=\"display:none;\" />\r\n      {state.viewMode == 'confirm' ? (\r\n        <div class=\"wqe--lead\">\r\n          <p class=\"wqe--leadText\">{_Tv('Please check your entry.')}</p>\r\n          <Button type=\"normal\" onclick={actions.onback} disabled={state.loading} xclass=\"wqe-for-back\">{_Tv('Back')}</Button>\r\n        </div>\r\n      ) : null}\r\n      {state.viewMode == 'horizontal' ? (\r\n        <HNavigator data={state.details.data} current={state.currentId} onproductdecr={actions.details.decr} onproductincr={actions.details.incr}>\r\n          <NavBar state={state} actions={actions} current={state.currentId} pos={state.navbarPos} navigator=\"hnavigator\"></NavBar>\r\n        </HNavigator>\r\n      ) : null}\r\n      <Monitor detailsState={state.details} confirming={state.viewMode == 'confirm'} spShown={state.spMonitorShown} monitorPos={state.monitorPos} ondecr={actions.details.decrByMonitor} onincr={actions.details.incrByMonitor} onHide={actions.onHideMonitor} />\r\n      {submittable ? (\r\n        state.viewMode == 'confirm' ? viewAttrItemsToConfirm(state.attrs, actions.attrs) : viewAttrItems(state.attrs, actions.attrs)\r\n      ) : null}\r\n      {actionButtons.length > 0 ? (\r\n        <Control label=\"\" required={false} message={null} note={null} id=\"wqe-action\" xclass=\"wqe-for-action\">\r\n          <InputGroup gutter=\"mini\">\r\n            {actionButtons}\r\n          </InputGroup>\r\n        </Control>\r\n      ) : null}\r\n    </form>\r\n  )\r\n}\r\n\r\n// wqData = {form, controls, catalog, rule}\r\nconst form = wqData.form;\r\nconst catalog = wqData.catalog;\r\nconst rule = wqData.rule;\r\nconst behavior = wqData.behavior;\r\nconst mode = wqData.mode;\r\nconst submitUrl = wqData.submitUrl;\r\nconst confirmUrl = wqData.confirmUrl;\r\nconst [pricePrefix, priceSuffix] = catalog['$%s'].split('%s')\r\n\r\nconst init = () => {\r\n  const {state:cState, actions:cActions} = assembleAttrItems(form.attrItems)\r\n  const state = {\r\n    details: createDetailState(cState), \r\n    attrs: cState, \r\n    viewMode: form.navigator,  // horizontal, confirm\r\n    loading: false, \r\n    spMonitorShown: false, \r\n    monitorPos: {v:'top', left:5000}, \r\n    navbarPos: {v:'top', left:0, width:0}, \r\n    currentId: findFirstId(), \r\n  }\r\n  window.setTimeout(() => allActions.onscroll(), 500)\r\n  const actions = {\r\n    details: detailActions, \r\n    attrs: cActions, \r\n    onback, \r\n    onsubmit, \r\n    onsubmitK, \r\n    onHideMonitor, \r\n    onShowMonitor, \r\n    /*onWizardClose, \r\n    onWizardOpen, \r\n    onWizardNext, \r\n    onWizardNextK, \r\n    onWizardPrev, \r\n    onWizardPrevK, */\r\n    onSelectGroup, \r\n    onscroll, \r\n    onresize,\r\n    onprocess\r\n  }\r\n  return app(state, actions, view, document.getElementById('aforms-eats-form-'+form.id))\r\n}\r\nconst allActions = init();\r\n\r\nwindow.setTimeout(() => {\r\n  document.addEventListener('scroll', allActions.onscroll)\r\n  window.addEventListener('resize', allActions.onresize)\r\n}, 100)","import { h } from 'hyperapp';\r\n\r\n\r\nexport const tnOnCreate = (el) => {\r\n  el.classList.add('wqe-is-created')\r\n  el.classList.add('wqe-is-run')\r\n  el.classList.add('wqe-for-created')\r\n  window.setTimeout(() => {\r\n    el.classList.remove('wqe-is-created')\r\n    const h =  (ev) => {\r\n      if (ev.target !== el) return;\r\n      el.classList.remove('wqe-is-run')\r\n      el.classList.remove('wqe-for-created')\r\n      el.removeEventListener('transitionend', h)\r\n    }\r\n    el.addEventListener('transitionend', h)\r\n    window.setTimeout(() => {\r\n      el.classList.remove('wqe-is-run')\r\n      el.classList.remove('wqe-for-created')\r\n      el.removeEventListener('transitionend', h)\r\n    }, 800)\r\n  }, 100)\r\n}\r\n\r\nexport const tnOnRemove = (el, done) => {\r\n  el.classList.add('wqe-is-run')\r\n  el.classList.add('wqe-for-removed')\r\n  window.setTimeout(() => {\r\n    var doneCalled = false\r\n    el.classList.add('wqe-is-removed')\r\n    el.addEventListener('transitionend', (ev) => {\r\n      if (ev.target !== el) return;\r\n      el.classList.remove('wqe-is-run')\r\n      el.classList.remove('wqe-for-removed')\r\n      if (! doneCalled) {\r\n        done()\r\n        doneCalled = true\r\n      }\r\n    })\r\n    window.setTimeout(() => {\r\n      el.classList.remove('wqe-is-run')\r\n      el.classList.remove('wqe-for-removed')\r\n      if (! doneCalled) {\r\n        done()\r\n        doneCalled = true\r\n      }\r\n    }, 800)\r\n  }, 100)\r\n}\r\n\r\n\r\n\r\nexport const Image = (\r\n    {\r\n      src, \r\n      scaling = 'center', \r\n      alt = '', \r\n      xclass = ''\r\n    }) => {\r\n  const style = {backgroundImage: \"url(\"+src+\")\"}\r\n  return (\r\n    <div class={`wqe-Image wqe-scaling-${scaling} ${xclass}`} style={style}>\r\n      <img src={src} alt={alt} class=\"wqe--img\" />\r\n    </div> \r\n  )\r\n}\r\n\r\nexport const TextInput = (\r\n    {\r\n      type, \r\n      size,  // full(100%), nano(3em), mini(4em), small(7em), normal(11em)\r\n      name, \r\n      placeholder, \r\n      value, \r\n      invalid = false, \r\n      oninput, \r\n      onblur, \r\n      xclass = ''\r\n    }) => {\r\n  const isInvalid = (invalid) ? 'wqe-is-invalid' : ''\r\n  const id = `wqe-text-${name}`\r\n  return (\r\n    <input type={type} class={`wqe-TextInput wqe-size-${size} ${isInvalid} ${xclass}`} id={id} name={name} placeholder={placeholder} value={value} oninput={oninput} onblur={onblur} />\r\n  )\r\n}\r\n\r\nexport const TextArea = (\r\n    {\r\n      name, \r\n      placeholder, \r\n      value, \r\n      size = 'normal',  // full, normal, small, mini, nano\r\n      invalid = false, \r\n      oninput, \r\n      onblur, \r\n      xclass = ''\r\n    }) => {\r\n  const isInvalid = (invalid) ? 'wqe-is-invalid' : ''\r\n  const id = `wqe-textarea-${name}`\r\n  return (\r\n    <textarea class={`wqe-TextArea ${isInvalid} wqe-size-${size} ${xclass}`} id={id} name={name} placeholder={placeholder} value={value} oninput={oninput} onblur={onblur} />\r\n  )\r\n}\r\n\r\nexport const RadioButton = (\r\n    {\r\n      index, \r\n      name, \r\n      value, \r\n      checked, \r\n      invalid = false, \r\n      onchange, \r\n      xclass = ''\r\n    }, children) => {\r\n  const id = `wqe-radio-${name}-${index}`\r\n  const isInvalid = (invalid) ? 'wqe-is-invalid' : ''\r\n  return (\r\n    <div class={`wqe-Radio ${xclass}`} id={id+'-wrapper'}>\r\n      <input type=\"radio\" name={name} value={value} checked={checked} onchange={onchange} id={id} class={`${isInvalid}`} />\r\n      <label for={id}>{children}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Checkbox = (\r\n    {\r\n      name, \r\n      value, \r\n      checked, \r\n      invalid = false, \r\n      onchange, \r\n      xclass = '', \r\n      id = null\r\n    }, children) => {\r\n  if (id === null) id = `wqe-checkbox-${name}`\r\n  const isInvalid = (invalid) ? 'wqe-is-invalid' : ''\r\n  return (\r\n    <div class={`wqe-Checkbox ${xclass}`} id={id+'-wrapper'}>\r\n      <input type=\"checkbox\" name={name} value={value} checked={checked} onchange={onchange} id={id} class={`${isInvalid}`} />\r\n      <label for={id}>{children}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Select = (\r\n    {\r\n      name, \r\n      options, \r\n      value, \r\n      invalid = false, \r\n      disabled = false, \r\n      clearable = false, \r\n      onchange, \r\n      placeholder, \r\n      xclass = '', \r\n      labelFunc = null, \r\n      valueFunc = null, \r\n      enabledFunc = null, \r\n      key = null\r\n    }) => {\r\n  const id = `wqe-select-${name}`\r\n  const isInvalid = (invalid) ? 'wqe-is-invalid' : ''\r\n  placeholder = placeholder || \"\"\r\n  return (\r\n    <div class={`wqe-Select ${xclass}`} id={id+'-wrapper'} key={key}>\r\n      <select class=\"wqe--input\" name={name} onchange={onchange} id={id} class={`wqe--input ${isInvalid}`} disabled={disabled}>\r\n        <option value=\"\" disabled={!clearable} selected={!value}>{placeholder}</option>\r\n        {labelFunc ? (\r\n          options.map(o => {\r\n            const v = valueFunc(o)\r\n            return (\r\n              <option value={v} selected={v == value} disabled={!enabledFunc(o)}>{v}</option>\r\n            )\r\n          })\r\n        ) : (\r\n          options.map(o => (\r\n            <option value={o} selected={o == value}>{o}</option>\r\n          ))\r\n        )}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Echo = (\r\n    {\r\n      name, \r\n      value, \r\n      glue, \r\n      xclass = ''\r\n    }) => {\r\n  const id = `wqe-echo-${name}`\r\n  value = (Array.isArray(value)) ? value.join(glue) \r\n        : (value === null) ? ''\r\n        : value\r\n  const lines = value.split(/\\r?\\n/).reduce((result, line) => {\r\n    result.push(line)\r\n    result.push(<br></br>)\r\n    return result\r\n  }, [])\r\n  return (\r\n    <div class={`wqe-Echo ${xclass}`} id={id}>{lines}</div>\r\n  )\r\n}\r\n\r\nexport const Button = (\r\n    {\r\n      type = 'normal',  // normal, primary\r\n      disabled = false, \r\n      xclass = '', \r\n      onclick, \r\n      name = null\r\n    }, children) => {\r\n  return (\r\n    <button type=\"button\" name={name} class={`wqe-Button wqe-type-${type} ${xclass}`} disabled={disabled} onclick={onclick} >{children}</button>\r\n  )\r\n}\r\n\r\nexport const InputGroup = (\r\n    {\r\n      gutter = 'none',  // none, small, mini\r\n      xclass = '', \r\n    }, children) => {\r\n  return (\r\n    <div class={`wqe-InputGroup wqe-gutter-${gutter} ${xclass}`}>{children}</div>\r\n  )\r\n}\r\n\r\nexport const Control = (\r\n    {\r\n      label, \r\n      required, \r\n      message, \r\n      note, \r\n      requiredText, \r\n      xclass = '', \r\n      id = null, \r\n      key = null\r\n    }, input) => {\r\n  return (\r\n    <div class={`wqe-Control wqe-lct-enabled ${xclass}`} id={id} oncreate={tnOnCreate} onremove={tnOnRemove} key={key}>\r\n      <div class={`wqe--header ${label ? '' : 'wqe-content-empty'}`}>\r\n        <span class=\"wqe--label\">{label}</span>\r\n        <span class={`wqe--required ${!required ? 'wqe-is-optional' : ''}`}>{requiredText}</span>\r\n      </div>\r\n      <div class=\"wqe--body\">\r\n        {input}\r\n        {(note) ? (<div class=\"wqe--note\">{note}</div>) : null}\r\n        {(message) ? (<div class=\"wqe--message wqe-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove}>{message}</div>) : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["$4b669f0e4c4f10ed$export$dda1d9f60106f0e9","name","attributes","rest","children","length","arguments","push","node","pop","nodeName","key","$4b669f0e4c4f10ed$export$729c8b7179294ba","state1","actions1","view","container","skipRender","map","rootElement","oldNode1","recycleElement","element1","toLowerCase","call","childNodes","element","nodeType","nodeValue","lifecycle","isRecycling","globalState","clone","wiredActions","wireStateToActions","path","state","actions","action","data","result","getPartialState","then","scheduleRender","setPartialState","concat","resolveNode","render","patch","setTimeout","target","source","out","i","value","slice","getKey","eventListener","event","currentTarget","events","type","updateAttribute","oldValue","isSvg","style","cssText","setProperty","addEventListener","removeEventListener","setAttribute","removeAttribute","createElement","document","createTextNode","createElementNS","oncreate","appendChild","removeChildren","ondestroy","removeElement","parent","done","removeChild","cb","onremove","oldNode","newElement","insertBefore","oldAttributes","onupdate","updateElement","oldKeyed","newKeyed","oldElements","oldChildren","oldKey","k","newKey","keyedNode","module","number","decimals","decPoint","thousandsSep","replace","n","isFinite","prec","Math","abs","sep","dec","s","indexOf","round","arr","split","sig","toFixed","toFixedFix","toString","Array","join","$a256e94f840794fc$var$YubinBango","YubinBango","Core1","$a256e94f840794fc$var$CACHE","Core","inputVal","callback","this","URL","REGION","c","String","fromCharCode","charCodeAt","match","yubin7","chk7","getAddr","addrDic","prototype","val","region_id","region","locality","street","extended","selectAddr","addr","jsonp","url","fn","window","scriptTag","head","_this","yubin3","substr","$a256e94f840794fc$exports","$d7297fa755110d91$var$_number_format","parcelRequire","tnOnCreate","el","classList","add","remove","h","ev","tnOnRemove","doneCalled","_ref","src","_ref$scaling","scaling","_ref$alt","alt","_ref$xclass","xclass","backgroundImage","class","_ref2","size","placeholder","_ref2$invalid","invalid","oninput","onblur","_ref2$xclass","isInvalid","id","_ref3","_ref3$size","_ref3$invalid","_ref3$xclass","_ref4","index","checked","_ref4$invalid","onchange","_ref4$xclass","for","_ref5","_ref5$invalid","_ref5$xclass","_ref5$id","_ref6","_h","options","_ref6$invalid","_ref6$disabled","disabled","_ref6$clearable","clearable","_ref6$xclass","_ref6$labelFunc","labelFunc","_ref6$valueFunc","valueFunc","_ref6$enabledFunc","enabledFunc","_ref6$key","$64fc35359a0a8da1$var$_defineProperty","selected","o","v","_ref7","glue","_ref7$xclass","lines","isArray","reduce","line","_ref8","_ref8$type","_ref8$disabled","_ref8$xclass","onclick","_ref8$name","_ref9","_ref9$gutter","gutter","_ref9$xclass","_ref10","input","label","required","message","note","requiredText","_ref10$xclass","_ref10$id","_ref10$key","$d7297fa755110d91$var$sprintf","format","f1","f2","nf","args","offset","trunc","x","ceil","floor","amount","$d7297fa755110d91$var$rule","taxPrecision","$d7297fa755110d91$var$catalog","$d7297fa755110d91$var$br","_Tv","_T","$d7297fa755110d91$var$_Tv","$d7297fa755110d91$var$_T","br","cur","$d7297fa755110d91$var$_toConsumableArray","hasOwnProperty","just","log","$d7297fa755110d91$var$scrollTo","scrollTo","posTop","undefined","pos","diff","documentElement","body","scrollTop","r","behavior","requestAnimationFrame","top","$d7297fa755110d91$var$behavior","smoothScroll","posBot","Object","_diff","$d7297fa755110d91$var$subsetOf","set","prop","replaceElement","arr2","lastIndexOf","fragment","off","idx","len","lis","$d7297fa755110d91$var$indexOf","e","reduceHash","hash","$d7297fa755110d91$var$reduceHash","f","e0","rule","price","pow","compare","equation","threshold","$d7297fa755110d91$var$Product","quantity","product","image","wqData","noimageurl","groupid","onincr","ondecr","navigator","iname","$d7297fa755110d91$var$pricePrefix","$d7297fa755110d91$var$nf","$d7297fa755110d91$var$priceSuffix","$64fc35359a0a8da1$exports","Image","ribbons","Button","Group","group","visible","$d7297fa755110d91$var$Group","selectedProducts","onproductdecr","onproductincr","products","every","p","HNavigator","form","item","current","suspendOtherSurfaces","overlayOnCreate","$d7297fa755110d91$var$suspendOtherSurfaces","Monitor","detailsState","confirming","$d7297fa755110d91$var$Monitor","subtotal","totalwt","defaultTax","monitorPos","spShown","onHide","id1","left","taxIncluded","unitPrice","details","detail","taxRate","sprintf","$d7297fa755110d91$var$normalizePrice","operatable","pricePrefix","priceSuffix","total","tax","taxes","attrItem_table","MSG_REQUIRED","MSG_INVALID","MSG_TOCHECK","MSG_TOSELECT","MSG_DIFFERENT","MSG_TOOSMALL","MSG_TOOLARGE","MSG_HIRAGANA","MSG_KATAKANA","$d7297fa755110d91$var$attrItem_table","Name","divided","names","Control","InputGroup","TextInput","compile","hiraganaPattern","validate","$d7297fa755110d91$var$MSG_REQUIRED","pattern","katakanaPattern","createActions","$d7297fa755110d91$var$MSG_HIRAGANA","branchNo","$d7297fa755110d91$var$branchNo","_actions","$d7297fa755110d91$var$MSG_KATAKANA","$d7297fa755110d91$var$_objectSpread","Email","repeated","initialState","_message","$d7297fa755110d91$var$replaceElement","$d7297fa755110d91$var$MSG_INVALID","Tel","phs","_name","$d7297fa755110d91$var$emptyString","some","emptyString","Address","_item","curval","autoFill","RegExp","zip","fs","_ref11","Checkbox","_ref12","$d7297fa755110d91$var$MSG_TOCHECK","Radio","opt","vs","initialValue","RadioButton","filter","$d7297fa755110d91$var$MSG_TOSELECT","_ref13","Dropdown","_value2","$d7297fa755110d91$var$reserveProcess","_value","reserveProcess","_ref14","MultiCheckbox","_ref15","v0","Text","multiline","TextArea","reCAPTCHA3","grecaptcha","execute","postfix","siteKey","assembleAttrItems","items","token","_process2","attrs","category","$d7297fa755110d91$var$allActions","onprocess","$d7297fa755110d91$var$form","attrItems","process","inputs","$d7297fa755110d91$var$process","_process","$d7297fa755110d91$var$_objectWithoutProperties","$d7297fa755110d91$var$_excluded","labels","messages","_unused","subtotals","rv","_form$detailItems$red","detailItems","$d7297fa755110d91$var$processTable","refTotal","$d7297fa755110d91$var$_excluded2","createDetail","subtotals1","cur1","subsetOf","nprice","normalizePrice","PriceWatcher","compare2","lower","lowerIncluded","$d7297fa755110d91$var$createDetail","higher","higherIncluded","jQuery","ajax","JSON","stringify","Stop","depends","selectedProducts0","gid","quantity0","pid","incr","$d7297fa755110d91$var$_defineProperty","decrByMonitor","incrByMonitor","createDetailState","viewMode","submitType","kontinue","cid","stt","mode","keys","attrMessages","submit","prefix","ms","elem","focus","ids","querySelector","findByProp","$d7297fa755110d91$var$focusErrorInput","waitCount","compiledAttrs","doConfirm","loading","error","msg","$d7297fa755110d91$var$submitUrl","$d7297fa755110d91$var$confirmUrl","dataType","success","response","complementAddress","YubinBangoCore","xhr","status","alert","$d7297fa755110d91$var$submit","formId","onsubmitK","forEach","location","resumeOtherSurfaces","dataValue","onHideMonitor","spMonitorShown","onShowMonitor","_ref17","findNextIndex","thanksUrl","href","$d7297fa755110d91$var$onHideMonitor","$d7297fa755110d91$var$resumeOtherSurfaces","currentId","calcNavbarPos","_ev$target$name$split2","$d7297fa755110d91$var$_slicedToArray","scrollOnGroupSelection","max","width","$d7297fa755110d91$var$calcMonitorPos","getElementById","child","crect","getBoundingClientRect","vbot","bottom","ch","right","height","vtop","intent","actionButtons","navbarPos","$d7297fa755110d91$var$onresize","submittable","$d7297fa755110d91$var$calcNavbarPos","$d7297fa755110d91$var$NavBar","_ref19","onback","viewAttrItemsToConfirm","catalog","submitUrl","confirmUrl","init","onsubmit","allActions","viewMOde","onscroll","onresize","validateAttrData","Echo","_ref16","viewAttrItems","a","attrState","$d7297fa755110d91$var$_excluded3"],"version":3,"file":"front.js.map"}